player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Secondary Striker","Attacker")
# For performance stats - setting - equal to 0
perform.var = c("appearances", "total.goals", "total.assists",
"substitutions_in", "substitutions_out", "yellowcards", "secondyellow",
"redcards", "penaltygoals", "minutes.pr.goal","total.minutes.played")
player.data.cleaning[perform.var] =
sapply(player.data.cleaning[perform.var], as.character) #  transforming performance var into character variables
player.data.cleaning[perform.var][player.data.cleaning[perform.var] == "-"] = 0 #replacing - with 0 for performance variables
# Removing rows where positions are unknown.
player.data.cleaning = player.data.cleaning[-c(67, 78, 83, 105, 178, 457, 659), ]
# Removing players who appear double in the sample
player.data.cleaning = player.data.cleaning[-c(59, 118, 131, 157, 161, 184, 291, 335, 357, 377, 379, 385, 394, 499, 521, 528, 557, 572, 578, 598, 645, 662, 745, 753), ]
# Removing rows which contain transfer.fee = NA
player.data.cleaning = subset(player.data.cleaning, !is.na(transfer.fee))
# Removing keepers
player.data.cleaning = player.data.cleaning[!grepl("Keeper", player.data.cleaning$positions),]
# Putting NA in all blank cells
player.data.cleaning[player.data.cleaning == ""] = NA
### Transforming number variables into numeric variables
sapply(player.data.cleaning, class) #inspecting the class of all variables
var.to.numeric = c("age", "transfer.fee", "appearances", "total.goals", "total.assists",
"substitutions_in", "substitutions_out", "yellowcards", "secondyellow",
"redcards", "penaltygoals", "minutes.pr.goal","total.minutes.played")
#creating a vector with the names of the variables that we want numeric
player.data.cleaning[var.to.numeric] =
sapply(player.data.cleaning[var.to.numeric], as.numeric) #  transforming the selected var into numeric
# Selecting the Remocing column X.1 and X, which are not useful.
names(player.data.cleaning)
player.data.clean = subset(player.data.cleaning, select=-c(X, contract.period.left, age,
transfer.year, transfer.month,
transfer.day, end.year, end.month,
end.day, contract.end.date, contract.left,
birth.year, birth.month, birth.day))
# ###### GOOGLE SEARCH
# GoogleHits <- function(input)  #Function that seach for the input specified
# {
#   input = gsub(" ", "+", input)
#   #url <- paste("https://www.google.com/search?q=\"",
#   #             input, "\"", sep = "")
#   url = paste0("https://www.google.com/search?q=",
#                input)
#
#   CAINFO = paste(system.file(package="RCurl"), "/CurlSSL/ca-bundle.crt", sep = "")
#   script <- getURL(url, followlocation = TRUE, cainfo = CAINFO)
#   doc <- htmlParse(script)
#   res <- xpathSApply(doc, '//*/div[@id="resultStats"]', xmlValue)
#   cat(paste("\nYour Search URL:\n", url, "\n", sep = ""))
#   #cat("\nNo. of Hits:\n")
#   return(as.integer(gsub("[^0-9]", "", res)))
# }
# player.data.clean.part1=player.data.clean[1:300,] #New data frame with the first 300 observations
#
# search.1=dQuote(player.data.clean.part1$name)  #Put quotation marks around name of the player
# search.2=paste(search.1,"footballer",player.data.clean.part1$nationality[1:300,], sep=" ") #Paste name of footballer, the word footballer and nationality
# search.2
#
# list.of.search.result=lapply(search.2, GoogleHits)) #New column reporting number of search results
##================ 2.2 Cleaning club data and creating useful predictors ================
club.data = read.csv("club_data_unclean.csv", encoding="latin1") # loading saved version of uncleaned club data
club.data.cleaning = club.data
## Giving different status to different clubs depending on which position they ended at in the league.
attach(club.data.cleaning)
club.data.cleaning$Status[Pos <= 5] = "Top Club"
club.data.cleaning$Status[Pos <= 15 & Pos > 5] = "Middle Club"
club.data.cleaning$Status[Pos >= 16] = "Buttom Club"
detach(club.data.cleaning)
## Changing the name of the team name variable
names(club.data.cleaning)[names(club.data)=="Team..v.t.e"] <- "Team"
names(club.data.cleaning)
## Renaming clubs in Wikipedia-tabel first
club.data.cleaning$Team=recode(club.data.cleaning$Team, "Chelsea (C)"="Chelsea", "Hull City (R)"="Hull City", "Burnley"="Burnley FC", "Queens Park Rangers (R)"="QPR",
"West Bromwich"="West Brom", "Tottenham Hotspur"="Spurs","Swansea City"="Swansea",
"Manchester United"="Manchester Utd.", "West Ham United"="West Ham", "Leicester City"="Leicester",
"Newcastle "="Newcastle", "West Bromwich Albion"="West Brom", "Barcelona (C)"="FC Barcelona", "Valencia"="Valencia CF", "MÃ¡laga"="Málaga CF", "Elche[d](R)"="Elche CF",
"Levante"="Levante UD", "Getafe"="Getafe CF", "Deportivo"="Dep. La Coruña", "Granada"="Granada CF",
"Eibar"="SD Eibar", "AlmerÃ?a (R)"="UD AlmerÃ?a", "CÃ³rdoba (R)"="CÃ³rdoba CF", "Sevilla"="Sevilla FC",
"Villarreal" = "Villarreal CF", "Celta Vigo" = "Celta de Vigo", "Juventus (C)"="Juventus", "Cargliari (R)"="Cagliari Calcio", "Parma[c](R)"="Parma", "Cesena (R)"="Cesena",
"Internazionale"="Inter", "Genoa[b]"="Genoa", "Roma"="AS Roma", "Napoli"="SSC Napoli", "Milan"="AC Milan",
"Palermo"="US Palermo", "Chievo"="Chievo Verona", "Empoli"="FC Empoli", "Udinese"="Udinese Calcio",
"Cagliari (R)"="Cagliari Calcio", "Paris Saint-Germain (C)"="Paris SG", "Evian (R)"="Evian", "Metz (R)"="FC Metz", "Lyon"="Olympique Lyon",
"Bordeaux"="G. Bordeaux", "Lille"="LOSC Lille", "Nice"="OGC Nice", "Caen"="SM Caen", "Nantes"="FC Nantes",
"Lorient"="FC Lorient", "Bordeaux"="G. Bordeaux", "Lens[b](R)"="RC Lens", "Bastia"="SC Bastia", "Bayern Munich (C)"="Bayern Munich", "SC Freiburg (R)"="SC Freiburg", "SC Paderborn 07 (R)"="SC Paderborn",
"Hamburger SV (O)"="Hamburger SV", "Borussia MÃ¶nchengladbach"="Bor. M'gladbach", "Schalke 04"="FC Schalke 04",
"Bayer Leverkusen"="Bay. Leverkusen", "Eintracht Frankfurt"="E. Frankfurt", "Borussia Dortmund"="Bor. Dortmund",
"1899 Hoffenheim" = "TSG Hoffenheim", "FSV Mainz 05"="1.FSV Mainz 05")
# Selecting the useful clubvariables
names(club.data.cleaning)
club.data.clean = subset(club.data.cleaning, select=c(Team, league, Status))
##================ 2.3 Merging player and club data into one tidy data frame ================
transferdata.tidy = left_join(player.data.clean,
club.data.clean,
by=c("club.to" = "Team"))
## Handeling promoted clubs
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
list(transferdata.tidy$league)
birth.year, birth.month, birth.day))
player.data.cleaning = read.csv("player_data_unclean.csv",header=FALSE, stringsAsFactors=FALSE) # loading saved version of uncleaned player data
## Cleaning transfer fee variable
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"£","")
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"\\.","") #removing the dots
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"m","0000") #removing the m
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"k","000") #removing the k
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"-", NA) #removing the - and turn into NA
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"\\?", NA) #removing ? and turn into NA
player.data.cleaning$transfer.fee = str_replace(player.data.cleaning$transfer.fee,"Free transfer","0") # Setting free transfer to be equal to 0
## cleaning goals pr. minutes
player.data.cleaning$minutes.pr.goal = str_sub(player.data.cleaning$minutes.pr.goal, start=1, end=-2)
player.data.cleaning$minutes.pr.goal = str_replace(player.data.cleaning$minutes.pr.goal,"\\.","")
## cleaning total minutes played
player.data.cleaning$total.minutes.played = str_sub(player.data.cleaning$total.minutes.played, start=1, end=-2)
player.data.cleaning$total.minutes.played = str_replace(player.data.cleaning$total.minutes.played,"\\.","")
## Cleaning variable for transferdate
player.data.cleaning$transfer.year = sub(".*,", "", player.data.cleaning$transfer.date) # subtract the year
player.data.cleaning$transfer.month = str_sub(player.data.cleaning$transfer.date, start=1, end=-9) #subtract month
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Jan", 01) #month by number instead of character
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Feb", 02)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Mar", 03)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Apr", 04)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "May", 05)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Jun", 06)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Jul", 07)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Aug", 08)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Sep", 09)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Oct", 10)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Nov", 11)
player.data.cleaning$transfer.month = str_replace(player.data.cleaning$transfer.month, "Dec", 12)
player.data.cleaning$transfer.day = str_sub(player.data.cleaning$transfer.date, start=4, end=-7) #subtract day
player.data.cleaning$transfer.date = paste(player.data.cleaning$transfer.year,"/",
player.data.cleaning$transfer.month,"/",
player.data.cleaning$transfer.day) ## full transferdate in right format
player.data.cleaning$transfer.date = str_replace_all(player.data.cleaning$transfer.date, " ","")
## cleaning contract length left
player.data.cleaning$contract.period.left = gsub("(?<=\\()[^()]*(?=\\))(*SKIP)(*F)|.", "", player.data.cleaning$contract.period.left, perl=T) #extract the date when the contract expires
player.data.cleaning$end.year = sub(".*,", "", player.data.cleaning$contract.period.left) # subtract the year
player.data.cleaning$end.month = str_sub(player.data.cleaning$contract.period.left, start=1, end=-9) #subtract month
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Jan", 01) #month by number instead of character
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Feb", 02)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Mar", 03)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Apr", 04)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "May", 05)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Jun", 06)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Jul", 07)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Aug", 08)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Sep", 09)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Oct", 10)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Nov", 11)
player.data.cleaning$end.month = str_replace(player.data.cleaning$end.month, "Dec", 12)
player.data.cleaning$end.day = str_sub(player.data.cleaning$contract.period.left, start=4, end=-7) #subtract day
player.data.cleaning$contract.end.date = paste(player.data.cleaning$end.year,"/",
player.data.cleaning$end.month,"/",
player.data.cleaning$end.day) ## full date in right format
player.data.cleaning$contract.end.date = str_replace_all(player.data.cleaning$contract.end.date, " ","") #remove whitespaces
player.data.cleaning$contract.end.date = str_replace_all(player.data.cleaning$contract.end.date, "//",NA) # label missing data NA
player.data.cleaning$contract.end.date = str_replace_all(player.data.cleaning$contract.end.date, "NA/NA/NA",NA) # label missing data NA
# calculating the number of days left of the contract
player.data.cleaning$contract.left = as.Date(as.character(player.data.cleaning$contract.end.date), format = "%Y/%m/%d") -
as.Date(as.character(player.data.cleaning$transfer.date), format = "%Y/%m/%d")
player.data.cleaning$contract.left.month = player.data.cleaning$contract.left / 30.4375 ## rescaling from days to months
## mistakes at transfermarkt.co.uk does that we recieve som negative contract length -  we turn them into NA
player.data.cleaning$contract.left.month[player.data.cleaning$contract.left.month < 0] = NA
## cleaning age variabel
player.data.cleaning$birth.date = player.data.cleaning$age
player.data.cleaning$birth.date = str_replace_all(player.data.cleaning$birth.date, " ","")
player.data.cleaning$birth.date = str_sub(player.data.cleaning$birth.date, start=1, end=-6) #birth date
player.data.cleaning$birth.year = sub(".*,", "", player.data.cleaning$birth.date) # subtract the year
player.data.cleaning$birth.month = substring(player.data.cleaning$birth.date, 1,4)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Jan", 01) #month by number instead of character
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Feb", 02)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Mar", 03)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Apr", 04)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "May", 05)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Jun", 06)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Jul", 07)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Aug", 08)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Sep", 09)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Oct", 10)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Nov", 11)
player.data.cleaning$birth.month = str_replace(player.data.cleaning$birth.month, "Dec", 12)
player.data.cleaning$birth.day = substring(player.data.cleaning$birth.date, 5,6) #subtract day
player.data.cleaning$birth.day = str_replace(player.data.cleaning$birth.day, ",","") #removing unneccesary
player.data.cleaning$birth.date = paste(player.data.cleaning$birth.year,"/",player.data.cleaning$birth.month,"/",player.data.cleaning$birth.day) ## full birthdate in right format
player.data.cleaning$birth.date = str_replace_all(player.data.cleaning$birth.date," ","") #remove whitespaces
player.data.cleaning$birth.date = str_replace(player.data.cleaning$birth.date," ","")
player.data.cleaning$birth.date = str_replace(player.data.cleaning$birth.date,"\n","")
# calculating the age at the transferdate
player.data.cleaning$transferage = as.Date(as.character(player.data.cleaning$transfer.date), format = "%Y/%m/%d") -
as.Date(as.character(player.data.cleaning$birth.date), format = "%Y/%m/%d")
player.data.cleaning$transferage = player.data.cleaning$transferage / 365.25 #rescaling from days to years
### Creating var that group players in defenders, midfielders and attackers
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Right-Back","Defender")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Left-Back","Defender")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Centre Back","Defender")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"-","Defender") # one observation has a -, but is defender - AMER?
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Attacking Midfield","Midfield")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Central Midfield","Midfield")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Defensive Midfield","Midfield")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Left Midfield","Midfield")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Right Midfield","Midfield")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Right Wing","Attacker")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Left Wing","Attacker")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Centre Forward","Attacker")
player.data.cleaning$positions = str_replace(player.data.cleaning$positions,"Secondary Striker","Attacker")
View(player.data.cleaning)
player.data.cleaning = read.csv("player_data_unclean.csv", encoding="utf-8") # loading saved version of uncleaned player data
player.data.cleaning = read.csv("player_data_unclean.csv", encoding="UTF-8") # loading saved version of uncleaned player data
library("rvest")
library("stringr")
library("purrr")
library("dplyr")
library("RCurl")
library("XML")
player.data.cleaning = read.csv("player_data_unclean.csv", encoding = "Latin1") # loading saved version of uncleaned player data
player.data.cleaning = read.csv("player_data_unclean.csv") # loading saved version of uncleaned player data
player.data.cleaning = read.csv("player_data_unclean.csv") # loading saved version of uncleaned player data
club.data = read.csv("club_data_unclean.csv", encoding="latin1") # loading saved version of uncleaned club data
club.data.cleaning = club.data
## Giving different status to different clubs depending on which position they ended at in the league.
attach(club.data.cleaning)
club.data.cleaning$Status[Pos <= 5] = "Top Club"
club.data.cleaning$Status[Pos <= 15 & Pos > 5] = "Middle Club"
club.data.cleaning$Status[Pos >= 16] = "Buttom Club"
detach(club.data.cleaning)
## Changing the name of the team name variable
names(club.data.cleaning)[names(club.data)=="Team..v.t.e"] <- "Team"
names(club.data.cleaning)
## Renaming clubs in Wikipedia-tabel first
<<<<<<< HEAD
club.data.cleaning$Team=recode(club.data.cleaning$Team, "Chelsea (C)"="Chelsea", "Hull City (R)"="Hull City", "Burnley (R)"="Burnley FC", "Queens Park Rangers (R)"="QPR",
=======
club.data.cleaning$Team=recode(club.data.cleaning$Team,"Barcelona (C)"="FC Barcelona", "Valencia"="Valencia CF", "Málaga"="Málaga CF", "Elche[d](R)"="Elche CF",
"Levante"="Levante UD", "Getafe"="Getafe CF", "Deportivo"="Dep. La Coruña", "Granada"="Granada CF",
"Eibar"="SD Eibar", "Almería (R)"="UD Almería", "Córdoba (R)"="Córdoba CF", "Sevilla"="Sevilla FC",
"Villarreal" = "Villarreal CF", "Celta Vigo" = "Celta de Vigo","Juventus (C)"="Juventus", "Cargliari (R)"="Cagliari Calcio", "Parma[c](R)"="Parma", "Cesena (R)"="Cesena",
"Internazionale"="Inter", "Genoa[b]"="Genoa", "Roma"="AS Roma", "Napoli"="SSC Napoli", "Milan"="AC Milan",
"Palermo"="US Palermo", "Chievo"="Chievo Verona", "Empoli"="FC Empoli", "Udinese"="Udinese Calcio",
"Cagliari (R)"="Cagliari Calcio","Paris Saint-Germain (C)"="Paris SG", "Evian (R)"="Evian", "Metz (R)"="FC Metz", "Lyon"="Olympique Lyon",
"Bordeaux"="G. Bordeaux", "Lille"="LOSC Lille", "Nice"="OGC Nice", "Caen"="SM Caen", "Nantes"="FC Nantes",
"Lorient"="FC Lorient", "Bordeaux"="G. Bordeaux", "Lens[b](R)"="RC Lens", "Bastia"="SC Bastia","Bayern Munich (C)"="Bayern Munich", "SC Freiburg (R)"="SC Freiburg", "SC Paderborn 07 (R)"="SC Paderborn",
"Hamburger SV (O)"="Hamburger SV", "Borussia Mönchengladbach"="Bor. M'gladbach", "Schalke 04"="FC Schalke 04",
"Bayer Leverkusen"="Bay. Leverkusen", "Eintracht Frankfurt"="E. Frankfurt", "Borussia Dortmund"="Bor. Dortmund",
"1899 Hoffenheim" = "TSG Hoffenheim", "FSV Mainz 05"="1.FSV Mainz 05","Chelsea (C)"="Chelsea", "Hull City (R)"="Hull City", "Burnley"="Burnley FC", "Queens Park Rangers (R)"="QPR",
"West Bromwich"="West Brom", "Tottenham Hotspur"="Spurs","Swansea City"="Swansea",
"Manchester United"="Manchester Utd.", "West Ham United"="West Ham", "Leicester City"="Leicester",
"Newcastle "="Newcastle United")
# Selecting the useful clubvariables
names(club.data.cleaning)
club.data.clean = subset(club.data.cleaning, select=c(Team, league, Status))
View(club.data.cleaning)
View(club.data)
View(club.data.clean)
player.data.cleaning = read.csv("player_data_unclean.csv") # loading saved version of uncleaned player data
?merge
merge(player.data.clean,club.data.clean, by(intersect(names("club.to"),names("Team")), all.x)
player.data.clean= read.csv(file="player_data_clean.csv", encoding = "latin1")
iconv(player.data.clean, from = "latin1", to = "UTF8", sub = NA, mark = TRUE, toRaw = FALSE)
club.data.clean=read.csv(file = "club.data.clean.3variables.csv", encoding="UTF8")
library("rvest")
library("stringr")
library("purrr")
library("dplyr")
library("RCurl")
library("XML")
#
library("Rcpp")
library("dplyr")
player.data.clean= read.csv(file="player_data_clean.csv", encoding = "latin1")
iconv(player.data.clean, from = "latin1", to = "UTF8", sub = NA, mark = TRUE, toRaw = FALSE)
merge(player.data.clean,club.data.clean, by(intersect(names("club.to"),names("Team")), all.x)
transferdata.tidy=merge(player.data.clean,club.data.clean, by(intersect(names("club.to"),names("Team")), all.x)
merge(player.data.clean,club.data.clean, by(intersect(names("club.to"),names("Team")), all.x)
View(player.data.clean)
View(player.data.clean)
merge(player.data.clean,club.data.clean, by(intersect(names("club.to"),names("Team")), all.x)
merge(player.data.clean,club.data.clean, by(intersect(names("club.to"),names("Team")), all.x=TRUE)
?by.x
merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
View(tidy)
## Handeling promoted clubs
tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
View(transferdata.tidy)
View(player.data.clean)
list(player.data.clean$club.to)
club.data.clean=read.csv(file = "club_data_clean.csv", encoding="UTF8")
View(club.data.clean)
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("club.to"), all.x=TRUE)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
View(transferdata.tidy)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$Status=as.character(transferdata.tidy$Status)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
player.data.clean= read.csv(file="player.data.clean.3variables", encoding = "latin1")
player.data.clean= read.csv(file="player.data.clean.3variables.csv", encoding = "latin1")
player.data.clean= read.csv(file="player_data_clean.csv", encoding = "latin1")
iconv(player.data.clean, from = "latin1", to = "UTF8", sub = NA, mark = TRUE, toRaw = FALSE)
club.data.clean=read.csv(file = "club_data_clean.csv", encoding="UTF8")
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("club.to"), all.x=TRUE)
transferdata.tidy$Status=as.character(transferdata.tidy$Status)
## Handeling promoted clubs
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
View(transferdata.tidy)
club.data.clean=read.csv(file = "club.data.clean.3variables.csv", encoding="UTF8")
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("club.to"), all.x=TRUE)
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
View(transferdata.tidy)
club.data = read.csv("club_data_unclean.csv", encoding="latin1") # loading saved version of uncleaned club data
club.data.cleaning = club.data
## Giving different status to different clubs depending on which position they ended at in the league.
attach(club.data.cleaning)
club.data.cleaning$Status[Pos <= 5] = "Top Club"
club.data.cleaning$Status[Pos <= 15 & Pos > 5] = "Middle Club"
club.data.cleaning$Status[Pos >= 16] = "Buttom Club"
detach(club.data.cleaning)
## Changing the name of the team name variable
names(club.data.cleaning)[names(club.data)=="Team..v.t.e"] <- "Team"
names(club.data.cleaning)
## Renaming clubs in Wikipedia-tabel first
club.data.cleaning$Team=recode(club.data.cleaning$Team,"Barcelona (C)"="FC Barcelona", "Valencia"="Valencia CF", "Málaga"="Málaga CF", "Elche[d](R)"="Elche CF",
"Levante"="Levante UD", "Getafe"="Getafe CF", "Deportivo La Coruña"="Dep. La Coruña", "Granada"="Granada CF",
"Eibar"="SD Eibar", "Almería (R)"="UD Almería", "Córdoba (R)"="Córdoba CF", "Sevilla"="Sevilla FC",
"Villarreal" = "Villarreal CF", "Celta Vigo" = "Celta de Vigo","Juventus (C)"="Juventus", "Cargliari (R)"="Cagliari Calcio", "Parma[c](R)"="Parma", "Cesena (R)"="Cesena",
"Internazionale"="Inter", "Genoa[b]"="Genoa", "Roma"="AS Roma", "Napoli"="SSC Napoli", "Milan"="AC Milan",
"Palermo"="US Palermo", "Chievo"="Chievo Verona", "Empoli"="FC Empoli", "Udinese"="Udinese Calcio",
"Cagliari (R)"="Cagliari Calcio","Paris Saint-Germain (C)"="Paris SG", "Evian (R)"="Evian", "Metz (R)"="FC Metz", "Lyon"="Olympique Lyon",
"Bordeaux"="G. Bordeaux", "Lille"="LOSC Lille", "Nice"="OGC Nice", "Caen"="SM Caen", "Nantes"="FC Nantes",
"Lorient"="FC Lorient", "Bordeaux"="G. Bordeaux", "Lens[b](R)"="RC Lens", "Bastia"="SC Bastia","Bayern Munich (C)"="Bayern Munich", "SC Freiburg (R)"="SC Freiburg", "SC Paderborn 07 (R)"="SC Paderborn",
"Hamburger SV (O)"="Hamburger SV", "Borussia Mönchengladbach"="Bor. M'gladbach", "Schalke 04"="FC Schalke 04",
"Bayer Leverkusen"="Bay. Leverkusen", "Eintracht Frankfurt"="E. Frankfurt", "Borussia Dortmund"="Bor. Dortmund",
"1899 Hoffenheim" = "TSG Hoffenheim", "FSV Mainz 05"="1.FSV Mainz 05","Chelsea (C)"="Chelsea", "Hull City (R)"="Hull City", "Burnley"="Burnley FC", "Queens Park Rangers (R)"="QPR",
"West Bromwich Albion"="West Brom", "Tottenham Hotspur"="Spurs","Swansea City"="Swansea",
"Manchester United"="Manchester Utd.", "West Ham United"="West Ham", "Leicester City"="Leicester",
"Newcastle United"="Newcastle")
# Selecting the useful clubvariables
names(club.data.cleaning)
club.data.clean = subset(club.data.cleaning, select=c(Team, league, Status))
write.csv(club.data.clean, file("club.data.clean.3variables.csv")
club.data.clean=read.csv(file = "club.data.clean.3variables.csv", encoding="UTF8")
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
View(transferdata.tidy)
transferdata.tidy$league[(transferdata.tidy$club.to == "Bayern Munich")]="Bundesliga"
transferdata.tidy$Status[(transferdata.tidy$club.to == "Bayern Munich")]="Top Club"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bayern Munich ")]="Bundesliga"
transferdata.tidy$Status[(transferdata.tidy$club.to == "Bayern Munich ")]="Top Club"
club.data = read.csv("club_data_unclean.csv", encoding="latin1") # loading saved version of uncleaned club data
club.data.cleaning = club.data
## Giving different status to different clubs depending on which position they ended at in the league.
attach(club.data.cleaning)
club.data.cleaning$Status[Pos <= 5] = "Top Club"
club.data.cleaning$Status[Pos <= 15 & Pos > 5] = "Middle Club"
club.data.cleaning$Status[Pos >= 16] = "Buttom Club"
detach(club.data.cleaning)
## Changing the name of the team name variable
names(club.data.cleaning)[names(club.data)=="Team..v.t.e"] <- "Team"
names(club.data.cleaning)
## Renaming clubs in Wikipedia-tabel first
club.data.cleaning$Team=recode(club.data.cleaning$Team,"Barcelona (C)"="FC Barcelona", "Valencia"="Valencia CF", "Málaga"="Málaga CF", "Elche[d](R)"="Elche CF",
"Levante"="Levante UD", "Getafe"="Getafe CF", "Deportivo La Coruña"="Dep. La Coruña", "Granada"="Granada CF",
"Eibar"="SD Eibar", "Almería (R)"="UD Almería", "Córdoba (R)"="Córdoba CF", "Sevilla"="Sevilla FC",
"Villarreal" = "Villarreal CF", "Celta Vigo" = "Celta de Vigo","Juventus (C)"="Juventus", "Cargliari (R)"="Cagliari Calcio", "Parma[c](R)"="Parma", "Cesena (R)"="Cesena",
"Internazionale"="Inter", "Genoa[b]"="Genoa", "Roma"="AS Roma", "Napoli"="SSC Napoli", "Milan"="AC Milan",
"Palermo"="US Palermo", "Chievo"="Chievo Verona", "Empoli"="FC Empoli", "Udinese"="Udinese Calcio",
"Cagliari (R)"="Cagliari Calcio","Paris Saint-Germain (C)"="Paris SG", "Evian (R)"="Evian", "Metz (R)"="FC Metz", "Lyon"="Olympique Lyon",
"Bordeaux"="G. Bordeaux", "Lille"="LOSC Lille", "Nice"="OGC Nice", "Caen"="SM Caen", "Nantes"="FC Nantes",
"Lorient"="FC Lorient", "Bordeaux"="G. Bordeaux", "Lens[b](R)"="RC Lens", "Bastia"="SC Bastia","Bayern Munich (C)"="Bayern Munich ", "SC Freiburg (R)"="SC Freiburg", "SC Paderborn 07 (R)"="SC Paderborn",
"Hamburger SV (O)"="Hamburger SV", "Borussia Mönchengladbach"="Bor. M'gladbach", "Schalke 04"="FC Schalke 04",
"Bayer Leverkusen"="Bay. Leverkusen", "Eintracht Frankfurt"="E. Frankfurt", "Borussia Dortmund"="Bor. Dortmund",
"1899 Hoffenheim" = "TSG Hoffenheim", "FSV Mainz 05"="1.FSV Mainz 05","Chelsea (C)"="Chelsea", "Hull City (R)"="Hull City", "Burnley"="Burnley FC", "Queens Park Rangers (R)"="QPR",
"West Bromwich Albion"="West Brom", "Tottenham Hotspur"="Spurs","Swansea City"="Swansea",
"Manchester United"="Manchester Utd.", "West Ham United"="West Ham", "Leicester City"="Leicester",
"Newcastle United"="Newcastle")
# Selecting the useful clubvariables
names(club.data.cleaning)
club.data.clean = subset(club.data.cleaning, select=c(Team, league, Status))
write.csv(club.data.clean, file("club.data.clean.csv")
player.data.clean= read.csv(file="player_data_clean.csv", encoding = "latin1")
transferdata.tidy=merge(player.data.clean,club.data.clean, by.x=c("club.to"),by.y=c("Team"), all.x=TRUE)
transferdata.tidy$Status[is.na(transferdata.tidy$Status)] = "Promoted"
transferdata.tidy$league[(transferdata.tidy$club.to == "Watford") |
(transferdata.tidy$club.to == "Norwich")|
(transferdata.tidy$club.to == "Bournemouth")] = "Premier league"
transferdata.tidy$league[(transferdata.tidy$club.to == "FC Ingolstadt") |
(transferdata.tidy$club.to == "SV Darmstadt 98")] = "Bundesliga"
transferdata.tidy$league[(transferdata.tidy$club.to == "UD Las Palmas")|
(transferdata.tidy$club.to == "Sporting Gijón")|
(transferdata.tidy$club.to == "Real Betis")] = "La Liga"
transferdata.tidy$league[(transferdata.tidy$club.to == "Bologna")|
(transferdata.tidy$club.to == "Carpi")|
(transferdata.tidy$club.to == "Frosinone")] = "Serie A"
transferdata.tidy$league[(transferdata.tidy$club.to == "SCO Angers")|
(transferdata.tidy$club.to == "Troyes")|
(transferdata.tidy$club.to == "G. Ajaccio")] = "Ligue 1"
write.csv(transferdata.tidy, file("transferdata.tidy.csv")
write.csv(transferdata.tidy, file("transferdata.tidy.csv"))
write.table(transferdata.tidy, file = "transferdata.tidy.csv",
sep = ",", col.names = NA, qmethod = "double")
