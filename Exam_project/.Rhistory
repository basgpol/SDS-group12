axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
p
df.viz.ave$mean.transfer<-as.numeric(df.viz.ave$mean.transfer)
p = ggplot(df.viz.ave, aes( x =league, y=mean.transfer, fill=league))
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
p
df.viz.ave$mean.transfer<-as.numeric(df.viz.ave$mean.transfer)
p = ggplot(df.viz.ave, aes( x =league, y=mean.transfer, fill=league))
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
p
df.viz.ave$mean.transfer<-as.numeric(df.viz.ave$mean.transfer)
p = ggplot(df.viz.ave, aes( x =league, y=mean.transfer, fill=fl))
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
p
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")+
scale_fill_brewer(
palette = "Blues")
p
p = ggplot(df.viz.ave, aes( x =league, y=mean.transfer))
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")+
scale_fill_brewer(
palette = "Blues")
p
df.viz.ave$mean.transfer<-as.numeric(df.viz.ave$mean.transfer)
p = ggplot(df.viz.ave, aes( x =league, y=mean.transfer, fill=league))
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")+
scale_fill_brewer(
palette = "Blues")
p
p = ggplot(df.viz.ave, aes( x =league, y=mean.transfer, fill=mean.transfer))
p<-p + geom_bar(stat="identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")+
scale_fill_brewer(
palette = "Blues")
p
View(df.viz)
df.viz.status<-df.viz %>%
group_by(Status) %>%
summary(mean.transfer=mean(transfer.fee))
df.viz.status<-df.viz %>%
group_by(Status) %>%
::dplyrsummarise_(mean.transfer=mean(transfer.fee))
df.viz.status<-df.viz %>%
group_by(Status) %>%
::dplyr summarise_(mean.transfer=mean(transfer.fee))
df.viz.status<-df.viz %>%
group_by(Status) %>%
dplyr::summarise_(mean.transfer=mean(transfer.fee))
df.viz.status<-df.viz %>%
group_by(Status) %>%
dplyr::summarise(mean.transfer=mean(transfer.fee))
p = ggplot(df.viz.status, aes(y= transfer.fee, x = league))
p + geom_bar()+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
p = ggplot(df.viz.status, aes(y= transfer.fee, x = Status))
p + geom_bar()+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
p = ggplot(df.viz.status, aes(y= mean.transfer, x = Status))
p + geom_bar(stat = "identity")+
theme(axis.title.x=element_blank(),
axis.text.x =element_text(size  = 7,
angle = 45,
hjust = 1,
vjust = 1),
axis.ticks= element_line(color=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y=element_blank(),
text=element_text(family="Goudy Old Style"))+
ggtitle("Premier League Clubs spend far more on average than other leagues' clubs")
df.viz.ave<-df.viz %>%
group_by(league) %>%
dplyr::summarise(
mean.transfer=mean(transfer.fee)/n(club.to))
gg<-ggmap(myMap)+#calling map
geom_path(aes(x = lon, y = lat, group = factor(name), size=transfer.fee), #putting paths on the map
colour="red", data = transfer.path.full, alpha=0.3)
gg
gg<-ggmap(myMap)+#calling map
geom_path(aes(x = lon, y = lat, group = factor(name)), #putting paths on the map
colour="red", data = transfer.path.full, alpha=0.3)
gg
out.of.europe<-filter(transfer.path.full, lon < -10 |lat < 35)
out.of.europe.2<- filter(transfer.path.full, lon>20 |lat>60)
out.full= rbind(out.of.europe.2, out.of.europe)
View(out.full)
View(transfer.data)
write_csv("df_spending.csv")
write_csv("df_spending.csv", df.spending.club)
write_csv(df.spending.club,"df_spending_club.csv")
m <- list(
colorbar = list(title = "Total transfer spending"),
size = 10, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'europe',
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
g
plot_ly(df.spending.club, lat = lat, lon = lon,  color = transfer.fee.total,
#text = team,
hoverinfo = "text" ,
text=paste("Team = ", df.spending.club$team,"\n", "Total transfer = ", df.spending.club$transfer.fee.total),
type = 'scattergeo', locationmode = 'ISO-3', mode = 'markers',
marker = m) %>%
layout(title = 'Football teams in Europe and transfer spending<br>(Hover for airport)', geo = g)
m <- list(
colorbar = list(title = "Total transfer spending"),
size = 10, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'europe',
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
g
plot_ly(df.spending.club, lat = lat, lon = lon,  color = transfer.fee.total,
#text = team,
hoverinfo = "text" ,
text=paste("Team = ", df.spending.club$team,"\n", "Total transfer = ", df.spending.club$transfer.fee.total),
type = 'scattergeo', locationmode = 'ISO-3', mode = 'markers',
marker = m) %>%
layout(title = 'Football teams in Europe and transfer spending<br>(Hover for airport)', geo = g)
View(df.spending.club)
View(df.spending)
#grouping by clubs
df.spending.club = df.viz %>%
group_by(club.to,league)%>%
dplyr::summarise(transfer.fee.total = sum(transfer.fee))
#tidying data frame
colnames(df.spending.club)[1] <- "team"#change "club to" to "team"
#TEAM
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")#removing the unwanted numbers*3 because it only take one out at a time
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")
df.spending.club$team = str_replace(df.spending.club$team,"*\\[.*?\\] *","")#removing the unwanted characters between brackets
df.spending.club$team = str_replace(df.spending.club$team,"Borussia Mönchengladbach","Mönchengladbach Borussia")
df.spending.club$team = str_replace(df.spending.club$team,"FC Augsburg","Augsburg FC")
df.spending.club$team = str_replace(df.spending.club$team,"FC Köln","Cologne FC")
df.spending.club$team = str_replace(df.spending.club$team,"VfB Stuttgart","Stuttgart VfB")
df.spending.club$team = str_replace(df.spending.club$team,"Hellas Verona","Verona FC")
df.spending.club$team = str_replace(df.spending.club$team,"BSC","Berlin")
df.spending.club$team = str_replace(df.spending.club$team,"Juventus","Juventus Turin")
df.spending.club$team = str_replace(df.spending.club$team,"Inter","Inter Milan")
df.spending.club$team = str_replace(df.spending.club$team,"US","FC")
df.spending.club$team = str_replace(df.spending.club$team,"\\.","")
df.spending.club$team = str_replace(df.spending.club$team," *\\(.*?\\) *","") #remove (C) for champions
#class transforming to numeric value or character value
df.spending.club$transfer.fee.total <- as.numeric(df.spending.club$transfer.fee.total)
df.spending.club$team <- as.character(df.spending.club$team)
###ADD COUNTRIES TO TEAM NAMES (in order to find them on gmap)
df.spending.club$team <- with(df.spending.club, ifelse(league=="Bundesliga", paste(team,"GERMANY", sep = " "),
ifelse(league=="Ligue 1", paste(team,"FRANCE", sep = " "),
ifelse(league=="Serie A", paste(team,"ITALY", sep = " "),
ifelse(league=="Premier league", paste(team,"UK", sep = " "),
ifelse(league=="La Liga", paste(team,"SPAIN", sep = " "),""))))))
#geocode team
geocodes <- geocode(as.character(df.spending.club$team))
#new dataframe with geocode
df.spending.club <- data.frame(df.spending.club[1:3],geocodes)
out.of.europe<-filter(df.spending.club, lon < -10 |lat < 35)
out.of.europe.2<- filter(df.spending.club, lon>20 |lat>60)
out.full= rbind(out.of.europe.2, out.of.europe)
write_csv(df.spending.club,"df_spending_club_with_geo.csv")
#####with plotly
m <- list(
colorbar = list(title = "Total transfer spending"),
size = 10, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'europe',
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
g
plot_ly(df.spending.club, lat = lat, lon = lon,  color = transfer.fee.total,
#text = team,
hoverinfo = "text" ,
text=paste("Team = ", df.spending.club$team,"\n", "Total transfer = ", df.spending.club$transfer.fee.total),
type = 'scattergeo', locationmode = 'ISO-3', mode = 'markers',
marker = m) %>%
layout(title = 'Football teams in Europe and transfer spending<br>(Hover for airport)', geo = g)
plot_ly(df.spending.club, lat = lat, lon = lon,  color = transfer.fee.total,
#text = team,
hoverinfo = "text" ,
text=paste("Team = ", df.spending.club$team,"\n", "Total transfer = ", df.spending.club$transfer.fee.total),
type = 'scattergeo', locationmode = 'ISO-3', mode = 'markers',
marker = m) %>%
layout(title = 'Football teams in Europe and transfer spending<br>(Hover for airport)', geo = g)
#geocode team
geocodes <- geocode(as.character(df.spending.club$team))
#geocode team
geocodes <- geocode(as.character(df.spending.club$team))
#new dataframe with geocode
df.spending.club <- data.frame(df.spending.club[1:3],geocodes)
out.of.europe<-filter(df.spending.club, lon < -10 |lat < 35)
out.of.europe.2<- filter(df.spending.club, lon>20 |lat>60)
out.full= rbind(out.of.europe.2, out.of.europe)
View(df.spending.club)
warning()
View(geocodes)
View(df.spending.club)
#grouping by clubs
df.spending.club = df.viz %>%
group_by(club.to,league)%>%
dplyr::summarise(transfer.fee.total = sum(transfer.fee))
#tidying data frame
colnames(df.spending.club)[1] <- "team"#change "club to" to "team"
#TEAM
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")#removing the unwanted numbers*3 because it only take one out at a time
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")
df.spending.club$team = str_replace(df.spending.club$team,"[1234567890]","")
df.spending.club$team = str_replace(df.spending.club$team,"*\\[.*?\\] *","")#removing the unwanted characters between brackets
df.spending.club$team = str_replace(df.spending.club$team,"Borussia Mönchengladbach","Mönchengladbach Borussia")
df.spending.club$team = str_replace(df.spending.club$team,"FC Augsburg","Augsburg FC")
df.spending.club$team = str_replace(df.spending.club$team,"FC Köln","Cologne FC")
df.spending.club$team = str_replace(df.spending.club$team,"VfB Stuttgart","Stuttgart VfB")
df.spending.club$team = str_replace(df.spending.club$team,"Hellas Verona","Verona FC")
df.spending.club$team = str_replace(df.spending.club$team,"BSC","Berlin")
df.spending.club$team = str_replace(df.spending.club$team,"Juventus","Juventus Turin")
df.spending.club$team = str_replace(df.spending.club$team,"Inter","Inter Milan")
df.spending.club$team = str_replace(df.spending.club$team,"US","FC")
df.spending.club$team = str_replace(df.spending.club$team,"\\.","")
df.spending.club$team = str_replace(df.spending.club$team," *\\(.*?\\) *","") #remove (C) for champions
#class transforming to numeric value or character value
df.spending.club$transfer.fee.total <- as.numeric(df.spending.club$transfer.fee.total)
df.spending.club$team <- as.character(df.spending.club$team)
###ADD COUNTRIES TO TEAM NAMES (in order to find them on gmap)
df.spending.club$team <- with(df.spending.club, ifelse(league=="Bundesliga", paste(team,"GERMANY", sep = " "),
ifelse(league=="Ligue 1", paste(team,"FRANCE", sep = " "),
ifelse(league=="Serie A", paste(team,"ITALY", sep = " "),
ifelse(league=="Premier league", paste(team,"UK", sep = " "),
ifelse(league=="La Liga", paste(team,"SPAIN", sep = " "),""))))))
#geocode team
geocodes <- geocode(as.character(df.spending.club$team))
#new dataframe with geocode
df.spending.club <- data.frame(df.spending.club[1:3],geocodes)
out.of.europe<-filter(df.spending.club, lon < -10 |lat < 35)
out.of.europe.2<- filter(df.spending.club, lon>20 |lat>60)
out.full= rbind(out.of.europe.2, out.of.europe)
write_csv(df.spending.club,"df_spending_club_with_geo.csv")
View(df.spending.club)
#####with plotly
m <- list(
colorbar = list(title = "Total transfer spending"),
size = 10, opacity = 0.8, symbol = 'circle'
)
# geo styling
g <- list(
scope = 'europe',
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
g
plot_ly(df.spending.club, lat = lat, lon = lon,  color = transfer.fee.total,
#text = team,
hoverinfo = "text" ,
text=paste("Team = ", df.spending.club$team,"\n", "Total transfer = ", df.spending.club$transfer.fee.total),
type = 'scattergeo', locationmode = 'ISO-3', mode = 'markers',
marker = m) %>%
layout(title = 'Football teams in Europe and transfer spending<br>(Hover for airport)', geo = g)
geocodes <- geocode(as.character(df.spending.club$team))
df.spending.club <- data.frame(df.spending.club[1:3],geocodes)
out.of.europe<-filter(df.spending.club, lon < -10 |lat < 35)
out.of.europe.2<- filter(df.spending.club, lon>20 |lat>60)
out.full= rbind(out.of.europe.2, out.of.europe)
write_csv(df.spending.club,"df_spending_club_with_geo.csv")
m <- list(
colorbar = list(title = "Total transfer spending"),
size = 10, opacity = 0.8, symbol = 'circle'
)
g <- list(
scope = 'europe',
projection = list(type = 'mercator'),
showland = TRUE,
landcolor = toRGB("gray95"),
subunitcolor = toRGB("gray85"),
countrycolor = toRGB("gray85"),
countrywidth = 0.5,
subunitwidth = 0.5
)
g
plot_ly(df.spending.club, lat = lat, lon = lon,  color = transfer.fee.total,
#text = team,
hoverinfo = "text" ,
text=paste("Team = ", df.spending.club$team,"\n", "Total transfer = ", df.spending.club$transfer.fee.total),
type = 'scattergeo', locationmode = 'ISO-3', mode = 'markers',
marker = m) %>%
layout(title = 'Football teams in Europe and transfer spending<br>(Hover for airport)', geo = g)
df.transfer<-read_csv("transfer_path_full.csv", encoding = "UTF8", header = TRUE) # must be tweaked so only club.to is in europe
df.transfer<-read_csv("transfer_path_full.csv", encoding = "latin1", header = TRUE) # must be tweaked so only club.to is in europe
View(transfer.path.ful)
player.data = read.csv("https://raw.githubusercontent.com/basgpol/SDS-group12/master/Exam_project/transferdata.final.csv", header=TRUE, stringsAsFactors=TRUE, fileEncoding="latin1") # loading saved version of uncleaned player data
View(player.data)
player.data = read.csv("https://raw.githubusercontent.com/basgpol/SDS-group12/master/Exam_project/transferdata.final.csv", header=TRUE, stringsAsFactors=TRUE, fileEncoding="UTF8") # loading saved version of uncleaned player data
View(player.data)
transfer.data = player.data
transfer.data= completeFun(transfer.data,"club.from") #function applied to transfer data to remove unknown origin
geocodes.club.to <- geocode(as.character(transfer.data$club.to))
transfer.path.origin <- data.frame(transfer.data,geocodes.club.to)
geocodes.club.from <- geocode(as.character(transfer.data$club.from))
transfer.path.destination <- data.frame(transfer.data,geocodes.club.from)
transfer.path.destination= data.frame(rep(i, nrow(transfer.data)), transfer.data$V1, transfer.data$lon, transfer.data$lat) #creating a dataset with destination coordinates
df.transfer<-read_csv("transfer_path_full.csv", encoding = "latin1", header = TRUE) # must be tweaked so only club.to is in europe
df.transfer<-read_csv("transfer_path_full.csv", encoding = "UTF8", header = TRUE) # must be tweaked so only club.to is in europe
df.transfer<-read_csv("transfer_path_full.csv") # must be tweaked so only club.to is in europe
View(df.transfer)
colnames(df.transfer)[4] <- "team"#change "club to" to "team"
df.transfer<-read_csv("transfer_path_full.csv") # must be tweaked so only club.to is in europe
colnames(df.transfer)[5] <- "team"#change "club to" to "team"
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")#removing the unwanted numbers*3 because it only take one out at a time
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")
df.transfer$team = str_replace(df.transfer$team,"*\\[.*?\\] *","")#removing the unwanted characters between brackets
df.transfer$team = str_replace(df.transfer$team,"Borussia Mönchengladbach","Mönchengladbach Borussia")
df.transfer$team = str_replace(df.transfer$team,"FC Augsburg","Augsburg FC")
df.transfer$team = str_replace(df.transfer$team,"FC Köln","Cologne FC")
df.transfer$team = str_replace(df.transfer$team,"VfB Stuttgart","Stuttgart VfB")
df.transfer$team = str_replace(df.transfer$team,"Hellas Verona","Verona FC")
df.transfer$team = str_replace(df.transfer$team,"BSC","Berlin")
df.transfer$team = str_replace(df.transfer$team,"Juventus","Juventus Turin")
df.transfer$team = str_replace(df.transfer$team,"Inter","Inter Milan")
df.transfer$team = str_replace(df.transfer$team,"US","FC")
df.transfer$team = str_replace(df.transfer$team,"\\.","")
df.transfer$team = str_replace(df.transfer$team," *\\(.*?\\) *","") #remove (C) for champions
df.transfer$transfer.fee.total <- as.numeric(df.transfer$transfer.fee.total)
df.transfer$team <- as.character(df.transfer$team)
df.transfer$transfer.fee <- as.numeric(df.transfer$transfer.fee)
df.transfer$team <- as.character(df.transfer$team)
df.transfer$team <- with(df.transfer, ifelse(league=="Bundesliga", paste(team,"GERMANY", sep = " "),
ifelse(league=="Ligue 1", paste(team,"FRANCE", sep = " "),
ifelse(league=="Serie A", paste(team,"ITALY", sep = " "),
ifelse(league=="Premier league", paste(team,"UK", sep = " "),
ifelse(league=="La Liga", paste(team,"SPAIN", sep = " "),""))))))
View(transfer.path.origin)
transfer.path.full= rbind(transfer.path.origin, transfer.path.destination)#binding
transfer.path.full<-transfer.path.full %>%
select(lon,lat,name,club.to,club.from,transfer.fee, league)
transfer.path.full= arrange(transfer.path.full, desc(index))# organising in descending order
write.csv(transfer.path.full, "transfer_path_full.csv")
df.transfer<-read_csv("transfer_path_full.csv") # must be tweaked so only club.to is in europe
colnames(df.transfer)[5] <- "team"#change "club to" to "team"
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")#removing the unwanted numbers*3 because it only take one out at a time
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")
df.transfer$team = str_replace(df.transfer$team,"[1234567890]","")
df.transfer$team = str_replace(df.transfer$team,"*\\[.*?\\] *","")#removing the unwanted characters between brackets
df.transfer$team = str_replace(df.transfer$team,"Borussia Mönchengladbach","Mönchengladbach Borussia")
df.transfer$team = str_replace(df.transfer$team,"FC Augsburg","Augsburg FC")
df.transfer$team = str_replace(df.transfer$team,"FC Köln","Cologne FC")
df.transfer$team = str_replace(df.transfer$team,"VfB Stuttgart","Stuttgart VfB")
df.transfer$team = str_replace(df.transfer$team,"Hellas Verona","Verona FC")
df.transfer$team = str_replace(df.transfer$team,"BSC","Berlin")
df.transfer$team = str_replace(df.transfer$team,"Juventus","Juventus Turin")
df.transfer$team = str_replace(df.transfer$team,"Inter","Inter Milan")
df.transfer$team = str_replace(df.transfer$team,"US","FC")
df.transfer$team = str_replace(df.transfer$team,"\\.","")
df.transfer$team = str_replace(df.transfer$team," *\\(.*?\\) *","") #remove (C) for champions
df.transfer$transfer.fee <- as.numeric(df.transfer$transfer.fee)
df.transfer$team <- as.character(df.transfer$team)
df.transfer$team <- with(df.transfer, ifelse(league=="Bundesliga", paste(team,"GERMANY", sep = " "),
ifelse(league=="Ligue 1", paste(team,"FRANCE", sep = " "),
ifelse(league=="Serie A", paste(team,"ITALY", sep = " "),
ifelse(league=="Premier league", paste(team,"UK", sep = " "),
ifelse(league=="La Liga", paste(team,"SPAIN", sep = " "),""))))))
df.transfer= completeFun(df.transfer,"lon")#applying the function to remove NA/unidentified to transfer.path
write_csv(geocodes,"geocodes.csv")
if (df.transfer$team==df.spending.club$team, str_replace(df.transfer$lon,df.spending.club$lon),FALSE)
if (df.transfer$team==df.spending.club$team, str_replace(df.transfer$lat,df.spending.club$lat),FALSE)
?str_replace
if (df.transfer$team==df.spending.club$team, str_replace(df.transfer$lon, df.transfer$lon, df.spending.club$lon),FALSE)
?str_replace
gg<-ggmap(myMap)+#calling map
geom_path(aes(x = lon, y = lat, group = factor(name)), #putting paths on the map
colour="red", data = df.transfer, alpha=0.3)
gg
